---
stages:
  - lint
  - test
  - Build release container
  - Build additional release containers

flake8:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD) |egrep ".py$" | grep -v ".docker/"|| true)
    - >
      if [ ! -z "$FLIST" ];
      then
        flake8 $FLIST;
      else
        echo "No files to lint"
        true;
      fi
  except:
    - master
  tags:
    - docker

yapf:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD)  |egrep ".py$" || true)
    - >
      if [ ! -z "$FLIST" ];
      then
        yapf -d -vv $FLIST;
      else
        echo "No files to lint"
        true;
      fi
  tags:
    - docker
  allow_failure: true

# waiting for https://github.com/rubik/xenon/issues/21
xenon:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD)  |egrep ".py$" || true)
    - x=0
    - >
      if [ ! -z "$FLIST" ];
      then
        for i in "${FLIST}";
        do
          (xenon --max-absolute B --max-modules B --max-average B "$i"; let x+=$?);
        done;
      fi
    - if [ "$x" -gt 0 ] ; then exit 1; fi
  except:
    - master
  tags:
    - docker
  allow_failure: true

pylint:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD) |egrep ".py$" || true)
    - >
      if [ ! -z "$FLIST" ];
      then
        pylint "$FLIST";
      else
        echo "No files to lint"
        true;
      fi
  except:
    - master
  tags:
    - docker

futurize:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD) |egrep ".py$" | grep -v ".docker/" || true)
    - /bin/future.sh "$FLIST"
  except:
    - master
  tags:
    - docker

futurize stage2:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git branch -q -r --contains) $(git merge-base origin/HEAD HEAD) |egrep ".py$" | grep -v ".docker/" || true)
    - /bin/future2.sh "$FLIST"
  except:
    - master
  tags:
    - docker
  allow_failure: true

Test migrate:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
  script:
    # see docker/docker-compose.yml for complete list of migrations
    - >
     docker-compose
     -f .docker/docker-compose.yml
     -p "${DOCKER_COMPOSE_PROJECT}-migrate"
     build migrate
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-migrate"
      up
      --exit-code-from migrate
      migrate
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-migrate"
      down -v
  tags:
    - shell
  allow_failure: false

Test code:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
  script:
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      build tests
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      up
      --exit-code-from tests
      tests
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-tests"
      down -v
  tags:
    - shell
  allow_failure: false

Test python 3:
  stage: test
  before_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
  script:
    # see docker/docker-compose.yml for complete list of migrations
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      build python3
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      up
      --exit-code-from python3
      python3
  after_script:
    - DOCKER_COMPOSE_PROJECT=${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}
    - >
      docker-compose
      -f .docker/docker-compose.yml
      -p "${DOCKER_COMPOSE_PROJECT}-py3"
      down -v
  tags:
    - shell
  allow_failure: true
  when: manual

Build release image:
  stage: Build release container
  before_script:
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    # registry.getnoc.com/noc/noc/code:stable
    - docker build --target code -t $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG -f .docker/Dockerfile .
    # registry.getnoc.com/noc/noc/dev:stable
    - docker build --target dev -t $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG -f .docker/Dockerfile .
    # registry.getnoc.com/noc/noc/static:stable
    - docker build --target static -t $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG -f .docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG 
    - docker push $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG 
    - docker push $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG
    - docker rmi $CI_REGISTRY_IMAGE/code:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/static:$CI_COMMIT_TAG
  tags:
    - shell
  only:
    - tags

# ----------------------------------------------------------------------
# Create escalation policy labels
# ----------------------------------------------------------------------
# Copyright (C) 2007-2021 The NOC Project
# See LICENSE for details
# ----------------------------------------------------------------------

# Third-party modules
from pymongo import InsertOne

# NOC modules
from noc.core.migration.base import BaseMigration


class Migration(BaseMigration):
    def migrate(self):
        l_coll = self.mongo_db["labels"]
        current_labels = {ll["name"]: ll["_id"] for ll in l_coll.find()}
        bulk = []
        # Create wildcard labels
        if "noc::escalation::*" not in current_labels:
            bulk += [
                InsertOne(
                    {
                        "name": "noc::escalation::*",
                        "description": "Builtin Labels mark for Alarm Escalation policy set",
                        "bg_color1": 16777215,
                        "fg_color1": 0,
                        "bg_color2": 16777215,
                        "fg_color2": 0,
                        "is_protected": False,
                        "is_autogenerated": False,
                        "enable_alarm": True,
                    }
                )
            ]
        # Create policy labels
        for ll in ["never", "rootfirst", "root", "alwaysfirst", "always"]:
            ll = f"noc::escalation::{ll}"
            if ll not in current_labels:
                bulk += [
                    InsertOne(
                        {
                            "name": ll,
                            "description": "Builtin Labels mark for Alarm Escalation policy set",
                            "bg_color1": 16777215,
                            "fg_color1": 0,
                            "bg_color2": 16777215,
                            "fg_color2": 0,
                            "is_protected": False,
                            "is_autogenerated": False,
                            "enable_alarm": True,
                        }
                    )
                ]
        if bulk:
            l_coll.bulk_write(bulk, ordered=True)
